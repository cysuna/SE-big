{"remainingRequest":"/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/babel-loader/lib/index.js!/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/src/views/Questions.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/src/views/Questions.vue","mtime":1717570055992},{"path":"/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/cache-loader/dist/cjs.js","mtime":1717570322947},{"path":"/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/babel-loader/lib/index.js","mtime":1717570322925},{"path":"/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/cache-loader/dist/cjs.js","mtime":1717570322947},{"path":"/Users/cys/Documents/mynotebook/SE-lab2-vue/SE-big/node_modules/vue-loader/lib/index.js","mtime":1717570322252}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGFwaSBmcm9tICdAL3NlcnZpY2VzL2FwaSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUXVlc3Rpb25zJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlc3Rpb25zOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoUXVlc3Rpb25zKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaFF1ZXN0aW9ucygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5nZXRRdWVzdGlvbnMoKTsKICAgICAgICB0aGlzLnF1ZXN0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIHF1ZXN0aW9uczonLCBlcnJvcik7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"names":["api","name","data","questions","created","fetchQuestions","methods","response","getQuestions","error","console"],"sources":["src/views/Questions.vue"],"sourcesContent":["<template>\n  <div>\n    <el-table :data=\"questions\" style=\"width: 100%\">\n      <el-table-column prop=\"question_text\" label=\"Question\" width=\"400\"></el-table-column>\n      <el-table-column prop=\"question_type\" label=\"Type\" width=\"150\"></el-table-column>\n      <el-table-column prop=\"difficulty\" label=\"Difficulty\" width=\"100\"></el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api'\n\nexport default {\n  name: 'Questions',\n  data() {\n    return {\n      questions: []\n    }\n  },\n  created() {\n    this.fetchQuestions()\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await api.getQuestions()\n        this.questions = response.data\n      } catch (error) {\n        console.error('Failed to fetch questions:', error)\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"AAWA,OAAAA,GAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA,MAAAD,eAAA;MACA;QACA,MAAAE,QAAA,SAAAP,GAAA,CAAAQ,YAAA;QACA,KAAAL,SAAA,GAAAI,QAAA,CAAAL,IAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,+BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}